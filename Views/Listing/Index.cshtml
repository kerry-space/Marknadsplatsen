@using Microsoft.AspNetCore.Identity
@model ListingIndexVm
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager
@inject UserService UserService
@{
    var isAdmin = await UserService.IsCurrentUserAdministratorAsync();
}

<div class="container mt-5">
    <h1 class="text-center mb-4">Listings</h1>
    <div class="row">
        @foreach (var listing in Model.Listings)
        {
            <div class="col-md-4 mb-4">
                <div class="card shadow-sm">
                    <div class="card-body">
                        <h5 class="card-title d-flex justify-content-center">@listing.Title</h5>
                        <p class="card-text d-flex justify-content-center">@listing.Description</p>
                        <div class="imgClass">
                            <img class="card-img-top kalle" src="@listing.ImageUrl" alt="Card image cap">
                        </div>
                        <p class="card-text d-flex justify-content-center mt-2"><strong>Price:</strong> @listing.Price
                            SEK
                        </p>
                        @if (listing.OwnerId == UserManager.GetUserId(User) || isAdmin)
                        {
                            <div class="d-flex justify-content-center">
                                <a asp-action="Edit" asp-route-id="@listing.Id" class="btn btn-warning btn-sm me-2">Edit</a>
                                <a asp-action="Delete" asp-route-id="@listing.Id" class="btn btn-danger btn-sm">Delete</a>
                            </div>
                        }
                    </div>
                </div>
            </div>
        }
    </div>
    @if (SignInManager.IsSignedIn(User))
    {
        <div class="text-center mt-4">
            <a asp-action="Create" class="btn btn-primary">Create New Listing</a>
        </div>
    }
</div>
